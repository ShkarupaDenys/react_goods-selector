{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleGood","good","setState","prevState","this","className","type","onClick","map","isSelected","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,aAAcI,EAAUJ,eAAiBE,EAAO,GAAKA,OAR7D,4CAaE,WAAU,IAAD,OACCF,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGN,EAEG,qCACGA,EACA,IAFH,cAKE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKP,WAAWD,SAInC,sBAGN,uBAAOM,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAP,GACT,IAAMQ,EAAaV,IAAiBE,EAEpC,OACE,qBACE,UAAQ,OAERI,UAAWK,IACT,CAAE,+BAAgCD,IAJtC,UAOE,6BACE,wBACE,UAASA,EACL,eACA,YACJH,KAAK,SACLD,UAAWK,IACT,SACA,CAAE,UAAWD,IAEfF,QAAS,kBAAM,EAAKP,WAAWC,IATjC,SAWGQ,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGJ,MAtBEA,iBA7CvB,GAAyBU,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.885da7a5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleGood = (good: string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGood: prevState.selectedGood === good ? '' : good,\n      };\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? (\n              <>\n                {selectedGood}\n                {' '}\n                is selected\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={() => this.handleGood(selectedGood)}\n                />\n              </>\n            )\n            : 'No goods selected'}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': isSelected },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={isSelected\n                        ? 'RemoveButton'\n                        : 'AddButton'}\n                      type=\"button\"\n                      className={classNames(\n                        'button',\n                        { 'is-info': isSelected },\n                      )}\n                      onClick={() => this.handleGood(good)}\n                    >\n                      {isSelected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}